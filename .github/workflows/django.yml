name: Django CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Cache dependency
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create secrets
        run: echo "${{ secrets.DOTENV }}" > server/.env

      - name: Set up Python 3.9
        if: github.event_name == 'pull_request'
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        if: github.event_name == 'pull_request'
        run: |
          cd server/
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage codecov

      - name: Run tests
        if: github.event_name == 'pull_request'
        run: |
          cd server/
          python manage.py migrate
          coverage run ./manage.py test
          codecov

      - name: Dockerize
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_HUB_PW }}" | docker login -u "${{ secrets.DOCKER_HUB_USER }}" --password-stdin
          docker build -t "${{ secrets.BACK_IMAGE_NAME }}" ./server/
          docker push "${{ secrets.BACK_IMAGE_NAME }}"
          docker logout

  deploy:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-20.04

    steps:
      - name: Run scripts
        run: |
          mkdir -p ~/.ssh
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/SSH_KEY.key
          chmod 600 ~/.ssh/SSH_KEY.key
          ssh-add ~/.ssh/SSH_KEY.key
          ssh ubuntu@"${{ secrets.DEPLOY_SERVER_IP }}" sudo bash deploy.sh
