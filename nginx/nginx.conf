upstream backend {
    server django:8000;
}

server {
  listen 80;
  server_name http://movietender.link http://www.movietender.link;
  return 301 https://movietender.link$request_uri;
}

server {
  client_max_body_size 1M;
  listen 443 ssl http2;
  server_name http://movietender.link;

  # ssl 인증서 적용하기
  ssl_certificate /etc/letsencrypt/live/movietender.link/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/movietender.link/privkey.pem;

  location / {
    root /data/client/dist;
    index index.html index.htm;
    try_files $uri /index.html;
  }

  location /admin {
    proxy_pass http://backend/admin;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /api {
    proxy_pass http://backend/api;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /static/ {
    alias /data/static/;
  }
}
